FOR


The for loop is a versatile and compact control flow structure in programming that is particularly useful when the number of iterations is known beforehand. It combines the initialization of loop variables, the condition for continuation, and the update of loop variables within a single line. The for loop typically consists of three expressions enclosed in parentheses: the initialization, the condition, and the update. The loop iterates as long as the condition is true, executing a block of code with each iteration.

#include <stdio.h>

int main() {
    // Example of a for loop in C

    // Loop from 1 to 5
    for (int i = 1; i <= 5; i++) {
        printf("Iteration %d\n", i);
    }

    return 0;
}

In this example, the for loop initializes the loop variable i to 1, checks if i is less than or equal to 5 before each iteration, and increments i by 1 after each iteration. The loop prints the message "Iteration x" for each value of i from 1 to 5.

The for loop is particularly convenient for iterating over a range of values or collections, making the code more concise and readable. It is essential to ensure proper initialization, specify a valid condition, and include a reliable mechanism for updating loop variables to avoid infinite loops or other unintended behaviors.